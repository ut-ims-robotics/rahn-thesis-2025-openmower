<launch>
  <!-- Input arguments -->
  <arg name="mav_name" default="zero"/>
  <arg name="log_output" default="screen"/>
  <arg name="radar_type" default="1843AOP" doc="[1843AOP, 6843AOP]"/>
  <arg name="radar_frame" default="ti_mmwave"/>

  <!-- (obsolete) Input arguments => todo: clean-up-->
  <!-- <arg name="device" value="1843AOP" doc="TI mmWave sensor device type [1843AOP, 6843AOP]"/> -->
  <!-- <arg name="config" value="3d" doc="TI mmWave sensor device configuration [3d_best_range_res 
                                    (not supported by 1642 EVM), 2d_best_range_res]"/> -->
  <!-- <arg name="max_allowed_elevation_angle_deg" default="90" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/> -->
  <!-- <arg name="max_allowed_azimuth_angle_deg" default="90" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/> -->

  <!-- mmWave_Manager node -->
  <group ns="$(arg mav_name)">

    <group if="$(eval radar_type == '1843AOP')">
      <!-- 1. mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
      <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/1843AOP/1843AOP_short_range_1.cfg" output="$(arg log_output)"/>
      <!-- <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/xwr18xx_AOP_profile_allRange_inclclutter.cfg" output="$(arg log_output)"/> -->

      <!-- 2. the actual radar node -->
      <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" output="$(arg log_output)">
        <param name="command_port" value="/dev/ttyUSB.1843cli"/>
        <param name="command_rate" value="115200"/>
        <param name="data_port" value="/dev/ttyUSB.1843data"/>
        <param name="data_rate" value="921600"/>
        <!-- <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"/> -->
        <!-- <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"/> -->
        <param name="frame_id" value="$(arg radar_frame)"/>
      </node>
    </group>

    <group if="$(eval radar_type == '6843AOP')">
      <!-- 1. mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
      <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/6843AOP/30fps_r5m_rr5cm_v9ms_vr56cms.cfg" output="$(arg log_output)"/>

      <!-- 2. the actual radar node -->
      <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" output="$(arg log_output)">
        <param name="command_port" value="/dev/ttyUSB.6843cli"/>
        <param name="command_rate" value="115200"/>
        <param name="data_port" value="/dev/ttyUSB.6843data"/>
        <param name="data_rate" value="921600"/>
        <!-- <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"/> -->
        <!-- <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"/> -->
        <param name="frame_id" value="$(arg radar_frame)"/>
      </node>
    </group>

  </group>

  <!-- Static transform from map to base_radar_link for visualization of stand-alone mmWave sensor using Rviz -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="static_TF_map_radar" args="0 0.5 0 0 0 0 map $(arg radar_frame)"/>

  <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ti_mmwave_rospkg)/launch/rviz/ti_mmwave_multi.rviz"/> -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ti_mmwave_rospkg)/cfg/viz/std.rviz"/>

</launch>
